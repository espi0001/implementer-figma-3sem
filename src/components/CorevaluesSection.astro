---
import CorevaluesCard from "./CorevaluesCard.astro";
import Button from "./Button.astro";
import Tag from "./Tag.astro";
import { Icon } from "astro-icon/components";

const { data } = Astro.props;
const { buttonProps1, tagProps } = Astro.props;
const { title, subtitle, button, values, link, text } = data;
// console.log(data);
---

<section>
  <div class="del1">
    <Tag {...tagProps}><slot /></Tag>
    <h2>{title}</h2>
    <div class="teksten">
      <p>{subtitle}</p>
      <Button {...buttonProps1} linket={button.link}>{button.text}</Button>
    </div>
  </div>

  <ul role="list" class="del2">
    {
      values.map((corevalue) => (
        <li>
          <Icon name={corevalue.icon} />

          <h5>{corevalue.title}</h5>
          <p>{corevalue.description}</p>
          <a href={corevalue.link.url}>{corevalue.link.text}</a>
        </li>
      ))
    }
  </ul>
</section>

<style>
  @layer components {
    section {
      grid-column: 1 / -1;
      display: grid;
      grid-template-columns: inherit;
      row-gap: 2rem;
      background: var(--color-primary3);
      color: var(--color-secondary2);
      padding: 5rem 0;
      @media (width < 600px) {
        display: block;
      }
      > * {
        grid-column: 2;
      }

      > ul {
        scroll-snap-type: x mandatory;
        grid-column: 1 / -1;
        padding-inline: max(1rem, 50% - var(--content) / 10px);
        padding-block-end: 1rem;

        li {
          scroll-snap-align: center;
          &:first-child {
            margin-left: calc(50% - var(--content) / 2);
          }

          &:last-child {
            margin-right: calc(50% - var(--content) / 2);
          }
        }
      }
      .del1 {
        display: flex;
        flex-direction: column;
        .text {
          max-width: 50%;
          .icon {
            width: 100px;
          }
        }
        .teksten {
          display: flex;
          justify-content: space-between;

          @media (width < 600px) {
            flex-direction: column;
          }
        }
      }
      .del2 {
        display: flex;
        justify-content: space-between;
        /* gap: 2.25rem; */
        overflow-x: auto;
        list-style: none;
        margin-top: 0;

        @media (width < 600px) {
          flex-direction: column;
        }

        li {
          flex-basis: min(272px, 90%);
          flex-shrink: 0;
          background: #ebebeb;
          color: #595566;
          border-radius: 8px;
          font-size: 1rem;
          padding: 2.75rem 2.1875rem;
          align-self: start;
          display: grid;
          gap: 10px;
          h6 {
            font-weight: 700;
            font-size: 1.5625rem;
          }

          svg {
            width: 53px;
          }
        }
        .icon-card {
          width: 40px;
          margin-bottom: 14px;
        }
      }
    }

    /* a {
      color: var(--color-primary3);
      align-self: end;
      &:hover {
        transform: scale(1.04);
      }
    }
    section {
      > * {
        grid-column: content;
      }
      .full {
        grid-column: full;
        display: grid;
        grid-template-columns: inherit;
        row-gap: 3rem;

        > ul {
          padding-block-end: 1rem;
        }
      }
    }

    ul {
      display: flex;
      gap: 1rem;
      overflow-x: auto;
      li {
        flex-basis: min(400px, 90%);
        background: var(--color-secondary2);
        color: var(--color-text);
        border-radius: 8px;
        padding: 2.75rem 2.1875rem;
        align-self: start;

        h5 {
          font-weight: 700;
          color: var(--color-primary3);
        }
      }
      svg {
        width: 53px;
      }
    }

    h6 {
      margin-block: 0 0.625rem;
      line-height: 1.125;
    }

    .teksten {
      display: flex;
      justify-content: space-between;
      p {
        max-inline-size: 67ch;
      }
    } */
  }
</style>
